#!/bin/sh
#
# Bash编写的简单的Captive portal

# Date    : 2014-12-15
# Version : 1.0

IPTABLES=/usr/sbin/iptables
INTERFACE=eth0
EXT_INTERFACE=rmnet0
IP=$(ifconfig $INTERFACE | grep inet | cut -d : -f 2 | cut -d " " -f 1)
AUTHSERVER="218.244.131.138"

init_rules(){
	#mangle表规则
	$IPTABLES -t mangle -N chain_trusted
	$IPTABLES -t mangle -N chain_outgoing
	$IPTABLES -t mangle -N chain_incoming
	
	$IPTABLES -t mangle -I PREROUTING 1 -i $INTERFACE -j chain_outgoing
	$IPTABLES -t mangle -I PREROUTING 1 -i $INTERFACE -j chain_trusted
	$IPTABLES -t mangle -I POSTROUTING 1 -o $INTERFACE -j chain_incoming

	$IPTABLES -t nat -N chain_outgoing
	$IPTABLES -t nat -N chain_wifi_to_router
	$IPTABLES -t nat -N chain_wifi_to_internet
	$IPTABLES -t nat -N chain_global
	$IPTABLES -t nat -N chain_unknow
	$IPTABLES -t nat -N chain_authserver
	$IPTABLES -t nat -N chain_validate

	$IPTABLES -t nat -A PREROUTING -i $INTERFACE -j chain_outgoing
	$IPTABLES -t nat -A chain_outgoing -d $IP -j chain_wifi_to_router
	$IPTABLES -t nat -A chain_wifi_to_router -j ACCEPT
	$IPTABLES -t nat -A chain_outgoing -j chain_wifi_to_internet
	$IPTABLES -t nat -A chain_wifi_to_internet -m mark --mark 0x01 -j ACCEPT
	$IPTABLES -t nat -A chain_wifi_to_internet -m mark --mark 0x02 -j chain_validate
	#TODO:这里添加认证中需要放行的ip地址
	#$IPTABLES -t nat -A chain_validate -d xxx.xxx.xxx.xxx -j ACCEPT


	$IPTABLES -t nat -A chain_wifi_to_internet -j chain_unknow
	#app会访问i.tgrass.com的2060端口
	$IPTABLES -t nat -A chain_unknow -p tcp --dport 2060 -d $AUTHSERVER -j REDIRECT --to-ports 80

	$IPTABLES -t nat -A chain_unknow -j chain_authserver
	$IPTABLES -t nat -A chain_authserver -d $AUTHSERVER -j ACCEPT
	$IPTABLES -t nat -A chain_unknow -j chain_global
	#TODO:放行设定的IP地址
	#$IPTABLES -t nat -A chain_global -d xxx.xxx.xxx.xxx -j ACCEPT
	
	$IPTABLES -t nat -A chain_unknow  -p tcp --dport 80 -j REDIRECT --to-ports 80

	$IPTABLES -t filter -N chain_wifi_to_internet
	$IPTABLES -t filter -N chain_global
	$IPTABLES -t filter -N chain_unknow
	$IPTABLES -t filter -N chain_know
	$IPTABLES -t filter -N chain_lock
	$IPTABLES -t filter -N chain_authserver
	$IPTABLES -t filter -N chain_validate

	$IPTABLES -t filter -I FORWARD -i $INTERFACE -j chain_wifi_to_internet
	#$IPTABLES -t filter -A chain_wifi_to_internet  -m state --state INVALID -j DROP
	#$IPTABLES -t filter -A chain_wifi_to_internet  -o $EXT_INTERFACE -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
	$IPTABLES -t filter -A chain_wifi_to_internet -j chain_authserver
	$IPTABLES -t filter -A chain_authserver -d $AUTHSERVER -j ACCEPT
	$IPTABLES -t filter -A chain_wifi_to_internet -m mark --mark 0x03 -j chain_lock
	$IPTABLES -t filter -A chain_lock -j DROP
	$IPTABLES -t filter -A chain_wifi_to_internet -j chain_global
	#$IPTABLES -t filter -A chain_global -d xxx.xxx.xxx.xxx -j ACCEPT
	$IPTABLES -t filter -A chain_wifi_to_internet -m mark --mark 0x02 -j chain_validate
	$IPTABLES -t filter -A chain_validate -j ACCEPT
	$IPTABLES -t filter -A chain_wifi_to_internet -m mark --mark 0x01 -j chain_know
	$IPTABLES -t filter -A chain_know -j ACCEPT
	$IPTABLES -t filter -A chain_wifi_to_internet -j chain_unknow
	$IPTABLES -t filter -A chain_unknow -p tcp --dport 53 -j ACCEPT
	$IPTABLES -t filter -A chain_unknow -p udp --dport 53 -j ACCEPT
	$IPTABLES -t filter -A chain_unknow -p tcp --dport 67 -j ACCEPT
	$IPTABLES -t filter -A chain_unknow -p udp --dport 67 -j ACCEPT
	$IPTABLES -t filter -A chain_unknow -j REJECT --reject-with icmp-port-unreachable

}

destroy_rules(){
	$IPTABLES -t mangle -D PREROUTING -i $INTERFACE -j chain_outgoing
	$IPTABLES -t mangle -D PREROUTING -i $INTERFACE -j chain_trusted
	$IPTABLES -t mangle -D POSTROUTING -o $INTERFACE -j chain_incoming
	$IPTABLES -t mangle -F chain_trusted
	$IPTABLES -t mangle -F chain_outgoing
	$IPTABLES -t mangle -F chain_incoming
	$IPTABLES -t mangle -X chain_trusted
	$IPTABLES -t mangle -X chain_outgoing
	$IPTABLES -t mangle -X chain_incoming

	$IPTABLES -t nat -D PREROUTING -i $INTERFACE -j chain_outgoing
	$IPTABLES -t nat -F chain_outgoing
	$IPTABLES -t nat -F chain_wifi_to_router
	$IPTABLES -t nat -F chain_wifi_to_internet
	$IPTABLES -t nat -F chain_global
	$IPTABLES -t nat -F chain_unknow
	$IPTABLES -t nat -F chain_authserver
	$IPTABLES -t nat -F chain_validate
	$IPTABLES -t nat -X chain_outgoing
	$IPTABLES -t nat -X chain_wifi_to_router
	$IPTABLES -t nat -X chain_wifi_to_internet
	$IPTABLES -t nat -X chain_global
	$IPTABLES -t nat -X chain_unknow
	$IPTABLES -t nat -X chain_authserver
	$IPTABLES -t nat -X chain_validate

	$IPTABLES -t filter -D FORWARD -i $INTERFACE -j chain_wifi_to_internet
	$IPTABLES -t filter -F chain_wifi_to_internet
	$IPTABLES -t filter -F chain_global
	$IPTABLES -t filter -F chain_unknow
	$IPTABLES -t filter -F chain_know
	$IPTABLES -t filter -F chain_lock
	$IPTABLES -t filter -F chain_authserver
	$IPTABLES -t filter -F chain_validate
	$IPTABLES -t filter -X chain_wifi_to_internet
	$IPTABLES -t filter -X chain_global
	$IPTABLES -t filter -X chain_unknow
	$IPTABLES -t filter -X chain_know
	$IPTABLES -t filter -X chain_lock
	$IPTABLES -t filter -X chain_authserver
	$IPTABLES -t filter -X chain_validate
}

case "$1" in
  start)
    echo "Starting BashPortal ... "
    init_rules
    ;;
  restart)
    $0 stop
    sleep 2
    $0 start
    ;;
  reload)
    $0 stop
    sleep 2
    $0 start
    ;;
  stop)
    echo "Stopping BashPortal ... "
    destroy_rules
    ;;

  *)
   echo "Usage: $0 {start|stop|restart|reload}"
   exit 1
   ;;
esac



